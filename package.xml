<?xml version="1.0" encoding="UTF-8"?>
<assembly>
	<id>release</id>
	<!-- 打包成一个用于发布的zip文件 -->
	<formats>
		<format>zip</format>
	</formats>
	<!-- 把依赖jar包打包进Zip压缩文件的lib目录下 -->
	<dependencySets>
		<dependencySet>
			<!-- 不使用项目的artifact -->
			<useProjectArtifact>false</useProjectArtifact>
			<!-- 
				第三方jar打包进Zip文件的lib目录下。
				注意此目录要与maven-jar-plugin中classpathPrefix指定的目录相同。不然这些依赖的jar包加载到ClassPath的时候会找不到
			 -->
			<outputDirectory>lib</outputDirectory>
			<!-- 第三方jar不要解压 -->
			<unpack>false</unpack>
		</dependencySet>
	</dependencySets>
	<!-- 文件设置。哪些文件包含或者文件排除设置。 -->
	<fileSets>
		<!-- 
			把项目自己编译出来的可执行jar，打包进zip文件的根目录。
			${project.build.directory}是maven的pom.xml文件内置变量，构建目录，缺省为target。
			也可以在pom.xml中配置自定义变量。
		 -->
		<fileSet>
			<directory>${project.build.directory}</directory>
			<outputDirectory></outputDirectory>
			<includes>
				<include>*.jar</include>
			</includes>
		</fileSet>
		<!-- generator的配置文件。打包进zip文件的根目录的config目录中 -->
		<fileSet>
			<directory>src/main/resources</directory>
			<outputDirectory>config</outputDirectory>
			<includes>
				<include>generator-config.properties</include>
			</includes>
		</fileSet>
		<!-- generator的freemarker模板文件。打包进zip文件的根目录的templates目录中 -->
		<fileSet>
			<directory>src/main/resources/templates</directory>
			<outputDirectory>templates</outputDirectory>
			<includes>
				<include>*.ftl</include>
			</includes>
		</fileSet>
		<!-- generator的使用说明文件。打包进zip文件的根目录 -->
		<fileSet>
			<directory></directory>
			<outputDirectory></outputDirectory>
			<includes>
				<include>README.md</include>
			</includes>
		</fileSet>
	</fileSets>
</assembly>